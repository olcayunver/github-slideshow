#!/bin/sh

set -e

echo "üöÄ Setting up optimized Jekyll slideshow..."

cd "$(dirname "$0")/.."

# Check for Homebrew dependencies on macOS
if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then
  brew bundle check >/dev/null 2>&1  || {
    echo "==> Installing Homebrew dependencies‚Ä¶"
    brew bundle
  }
fi

# Ruby version management
if [ -f ".ruby-version" ] && [ -z "$(rbenv version-name 2>/dev/null)" ]; then
  echo "==> Installing Ruby‚Ä¶"
  rbenv install --skip-existing
  which bundle >/dev/null 2>&1  || {
    gem install bundler
    rbenv rehash
  }
fi

# Install Ruby dependencies with optimizations
if [ -f "Gemfile" ]; then
  echo "==> Installing optimized gem dependencies‚Ä¶"
  bundle install --no-cache --quiet --without production --jobs=4
fi

# Initialize git submodules
echo "==> Updating git submodules‚Ä¶"
git submodule update --init --recursive

# Verify reveal.js is available
if [ ! -d "node_modules/reveal.js" ]; then
  echo "‚ö†Ô∏è  Warning: reveal.js not found in node_modules"
  echo "   Make sure to run 'npm install' or equivalent to install reveal.js"
fi

# Performance check
echo "==> Running performance check‚Ä¶"
if command -v node >/dev/null 2>&1; then
  echo "‚úì Node.js available for potential build optimizations"
else
  echo "‚ö†Ô∏è  Node.js not found - some optimizations may not be available"
fi

echo "‚úÖ App is now ready to go with performance optimizations!"
echo ""
echo "Next steps:"
echo "  ‚Ä¢ Run './script/server' to start the development server"
echo "  ‚Ä¢ Run './script/cibuild' to build for production"
echo "  ‚Ä¢ Check browser dev tools for performance metrics"
